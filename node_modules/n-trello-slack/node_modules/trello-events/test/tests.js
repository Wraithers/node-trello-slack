var mock = require('mock');

var mockTrello = function(key,token){};
mockTrello.prototype.get = function(uri,callback){
	var mockData = [
		{ type: 'a', msg: 'event a' }
		,{ type: 'b', msg: 'event b' }
		,{ type: 'c', msg: 'event c' }
		,{ type: 'd', msg: 'event d' }
	];
	callback(null, mockData);
};

var Trello = mock('../index', {
	'../node_modules/trello/main': mockTrello
}, require);

describe('trello', function(){

	it('should emit events for each event type', function(done){

		var trello = new Trello({
			trello: {
				boards: ['foo']
			}
		});

		trello.on('a', function(event, boardId){
			boardId.should.equal('foo');
			event.should.have.property('type');
			event.type.should.equal('a');
			count++;
			doneIfDone();
		}).on('b', function(event, boardId){
			boardId.should.equal('foo');
			event.should.have.property('type');
			event.type.should.equal('b');
			count++;
			doneIfDone();
		}).on('c', function(event, boardId){
			boardId.should.equal('foo');
			event.should.have.property('type');
			event.type.should.equal('c');
			count++;
			doneIfDone();
		}).on('d', function(event, boardId){
			boardId.should.equal('foo');
			event.should.have.property('type');
			event.type.should.equal('d');
			count++;
			doneIfDone();
		});

		trello.start(null, true);

		function doneIfDone(){
			if (count >= 3){
				trello.stop();
				done();
			}
		}

	});

});
